{"id":"node_modules/@react-navigation/core/lib/module/CurrentRenderContext.js","dependencies":[{"name":"/Users/eliasnemr/projects/reactweb/web/node_modules/@react-navigation/core/lib/module/CurrentRenderContext.js.map","includedInParent":true,"mtime":1642945259812},{"name":"/Users/eliasnemr/projects/reactweb/web/package.json","includedInParent":true,"mtime":1643041541145},{"name":"/Users/eliasnemr/projects/reactweb/web/node_modules/@react-navigation/core/package.json","includedInParent":true,"mtime":1642945259812},{"name":"react","loc":{"line":1,"column":23},"parent":"/Users/eliasnemr/projects/reactweb/web/node_modules/@react-navigation/core/lib/module/CurrentRenderContext.js","resolved":"/Users/eliasnemr/projects/reactweb/web/node_modules/react/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Context which holds the values for the current navigation tree.\n * Intended for use in SSR. This is not safe to use on the client.\n */\nconst CurrentRenderContext = /*#__PURE__*/React.createContext(undefined);\nvar _default = CurrentRenderContext;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"CurrentRenderContext.tsx","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"CurrentRenderContext.tsx","name":null,"original":{"line":3,"column":0},"generated":{"line":14,"column":0}},{"source":"CurrentRenderContext.tsx","name":null,"original":{"line":4,"column":0},"generated":{"line":15,"column":0}},{"source":"CurrentRenderContext.tsx","name":null,"original":{"line":5,"column":0},"generated":{"line":16,"column":0}},{"source":"CurrentRenderContext.tsx","name":null,"original":{"line":6,"column":0},"generated":{"line":17,"column":0}},{"source":"CurrentRenderContext.tsx","name":null,"original":{"line":7,"column":0},"generated":{"line":18,"column":0}},{"source":"CurrentRenderContext.tsx","name":"CurrentRenderContext","original":{"line":7,"column":6},"generated":{"line":18,"column":6}},{"source":"CurrentRenderContext.tsx","name":null,"original":{"line":7,"column":26},"generated":{"line":18,"column":26}},{"source":"CurrentRenderContext.tsx","name":null,"original":{"line":7,"column":26},"generated":{"line":18,"column":29}},{"source":"CurrentRenderContext.tsx","name":"React","original":{"line":8,"column":2},"generated":{"line":18,"column":42}},{"source":"CurrentRenderContext.tsx","name":null,"original":{"line":8,"column":7},"generated":{"line":18,"column":47}},{"source":"CurrentRenderContext.tsx","name":"createContext","original":{"line":8,"column":8},"generated":{"line":18,"column":48}},{"source":"CurrentRenderContext.tsx","name":"React","original":{"line":8,"column":2},"generated":{"line":18,"column":61}},{"source":"CurrentRenderContext.tsx","name":"undefined","original":{"line":8,"column":56},"generated":{"line":18,"column":62}},{"source":"CurrentRenderContext.tsx","name":"React","original":{"line":8,"column":2},"generated":{"line":18,"column":71}},{"source":"CurrentRenderContext.tsx","name":null,"original":{"line":7,"column":0},"generated":{"line":18,"column":72}},{"source":"CurrentRenderContext.tsx","name":"CurrentRenderContext","original":{"line":10,"column":15},"generated":{"line":19,"column":15}}],"sources":{"CurrentRenderContext.tsx":"import * as React from 'react';\n\n/**\n * Context which holds the values for the current navigation tree.\n * Intended for use in SSR. This is not safe to use on the client.\n */\nconst CurrentRenderContext =\n  React.createContext<{ options?: object } | undefined>(undefined);\n\nexport default CurrentRenderContext;\n"},"lineCount":null}},"error":null,"hash":"ed1a5b92cd41f2c3a6f7626b25af6e8b","cacheData":{"env":{}}}